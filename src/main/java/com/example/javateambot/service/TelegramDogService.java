package com.example.javateambot.service;

import com.example.javateambot.controllers.UsersController;
import com.example.javateambot.entity.Users;
import com.pengrad.telegrambot.TelegramBot;
import com.pengrad.telegrambot.request.SendMessage;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Service;
import org.springframework.web.multipart.MultipartFile;

import java.time.LocalDate;

@Service
public class TelegramDogService {
    private final Logger logger = LoggerFactory.getLogger(TelegramDogService.class);

    public TelegramDogService(TelegramBot telegramBot) {
        this.telegramBot = telegramBot;
    }



    //КОНСУЛЬТАЦИЯ С НОВЫМ ПОЛЬЗОВАТЕЛЕМ
    private static final String NAME_OF_SCHELTER = "The Best Shelter";

    /**
     * Метод, который выводит приветственное сообщение и предлагает выбрать дальнейшие действия
     * @param chatId
     */
    private final TelegramBot telegramBot;
    public void sendWelcomeMessage(Long chatId) {
        String message = "Добрый день! Приветствуем Вас в приюте для животных \"" + NAME_OF_SCHELTER + "\".\n" +
                "Выберите пожалуйста, что Вас интересует:\n" +
                "1. Я впервые здесь и хочу узнать больше о приюте.\n" +
                "2. Я уже обращался(-лась) к Вам и хочу получить информацию о животном, которое ранее было у меня.\n" +
                "3. Я хочу отправить отчет о животном, которое я взял(-а) в этом приюте ранее.";
        telegramBot.execute(new SendMessage(chatId, message));
    }

    /**
     * Метод для пользователя, который впервые в нашем приюте.
     * Метод предлагает выбрать дальнейшие действия.
     */
    public void sendFirstTimeMessage(Long chatId) {
        String message = "Что Вам подсказать:\n" +
                "Рассказать о приюте\n" +
                "Выдать расписание работы приюта и адрес, схему проезда\n" +
                "Выдать общие рекомендации о технике безопасности на территории приюта\n" +
                "Оставить контактные данные, чтобы мы связались с Вами\n" +
                "Позвать оператора";
        telegramBot.execute(new SendMessage(chatId, message));
    }

    /**
     * Бот рассказывает о приюте.
     * @return информация о приюте
     */
    public String descriptionOfShelter() {
        return  "Наш приют " + NAME_OF_SCHELTER + " — это приют для собак, в котором волонтеры следят за " +
                         "здоровьем животных, выгуливают их, ухаживают за ними, а также помогают найти им новый дом";

    }

    /**
     * Бот выдаёт расписание работы приюта и адрес, схему проезда.
     * @return расписание работы приюта и адрес, схему проезда
     */
    public String infoAboutShelter() {
        return "Наш приют находится по адресу: г.Москва, 5112-й Проектируемый пр-д, стр. 1-3, 109383.\n" +
                "Как добраться: От метро Печатники идёт маршрутка № 438 до остановки «Батюнинский проезд» " +
                "(конечная). Оттуда 10 минут пешком до нашего приюта.\n" +
                "Режим работы: пн-пт с 9:00 до 21:00; сб, вс - выходные";
    }

    /**
     * Бот выдаёт общие рекомендации о технике безопасности на территории приюта.
     * @return общие рекомендации о технике безопасности на территории приюта
     */
    public String safetyRecommendations() {
        return "Обязательно предупреждайте о приезде в наш приют - без сопровождения волонтёра вас не пустят на территорию приюта.\n" +
                "Всех гостей встречает и сопровождает один из наших волонтёров.\n" +
                "Мы очень рады вашим визитам, поэтому сделаем всё, чтобы у вас не возникло проблем на проходной.\n" +
                "Администрация просит нас сообщать, что приедут гости и в каком количестве, так что лучше договориться о визите заранее.";
    }

    /**
     * Бот принимает и записывает контактные данные для связи.
     * @param firstName имя
     * @param lastName фамилия
     * @param numberUser номер телефона
     * @return записанные контактные данные для связи
     */
    public String recordingContactData(String firstName, String lastName, String numberUser) {
        Users newUser = new Users();
        newUser.setFirstName(firstName);
        newUser.setLastName(lastName);
        newUser.setNumberUser(numberUser);
//        userRepository.save(newUser);
        return firstName + " " + lastName + ", Ваш номер телефона " + numberUser + " записан";
    }

    /**
     * Метод зовет оператора, если бот не может ответить на вопросы клиента
     * @return текст, уведомляющий о том, что боту нужна помощь оператора
     */
    public String callVolunteer() {
        return "К сожалению, я не могу помочь Вам в решении вопроса. Сейчас Вам ответит оператор.";
    }


    //КОНСУЛЬТАЦИЯ С ПОТЕНЦИАЛЬНЫМ ХОЗЯИНОМ
    /**
     * Метод для потенциального хозяина животного.
     * Метод предлагает выбрать дальнейшие действия.
     */
    public void sendRulesAndDocsMessage(Long chatId) {
        String message = "Что Вам подсказать:\n" +
                "1. Правила знакомства с собакой до того, как можно забрать ее из приюта\n" +
                "2. Список документов, необходимый, чтобы забрать питомца\n" +
                "3. Список рекомендаций по транспортировке животного\n" +
                "4. Список рекомендаций по обустройству дома для щенка\n" +
                "5. список рекомендаций по обустройству дома для взрослой собаки" +
                "6. Список рекомендаций по обустройству дома для собаки с ограниченными возможностями\n" +
                "7. Советы кинолога по первичному общению с собакой\n" +
                "8. Рекомендации по проверенным кинологам для дальнейшего обращения к ним\n" +
                "9. Список причин, почему могут отказать и не дать забрать собаку из приюта\n" +
                "10. Изменить контактные данные\n" +
                "11. Позвать оператора";
        telegramBot.execute(new SendMessage(chatId, message));
    }

    /**
     * Бот выдаёт правила знакомства с собакой до того, как можно забрать ее из приюта.
     * @return правила знакомства с собакой
     */
    public String rulesForDating() {
        return " Правила знакомства с собакой:\n" +
                "1. Спросите разрешения у сотрудников приюта перед тем, как подойти к собаке. Они могут дать вам дополнительную информацию о поведении собаки и помочь с выбором подходящего питомца.\n"+
                "2. Подойдите к клетке собаки медленно и тихо, чтобы не пугать ее. Если собака выглядит напуганной или злой, не пытайтесь подходить к ней.\n" +
                "3. Разговаривайте с собакой мягким и успокаивающим голосом, чтобы она могла узнать ваш голос и начать доверять вам.\n" +
                "4. Если собака показывает интерес к вам, вы можете попросить сотрудника приюта разрешения на прогулку с ней в безопасной зоне.\n" +
                "5. Во время прогулки следуйте инструкциям сотрудника приюта и не позволяйте собаке подходить к другим собакам или людям  \n";
    }

    /**
     * Бот выдаёт список документов, необходимых для того, чтобы взять собаку из приюта.
     * @return список документов, необходимых для того, чтобы взять собаку из приюта
     */
    public String listOfDocuments() {
        return "Чтобы забрать собаку из приюта необходимо приготовить следующий пакет документов:\n" +
                "1. Паспорт или иной документ, удостоверяющий личность.\n" +
                "\n" +
                "2. Документ, подтверждающий право собственности на жилье (квартиру или дом),в котором будет проживать собака. Это может быть, например,копия свидетельства о праве собственности или договор аренды жилья.\n" +
                "\n" +
                "3. Документ, подтверждающий финансовую способность содержать собаку.Это может быть выписка из банка или трудовой договор, который подтверждает достаточный уровень дохода.\n" +
                "\n" +
                "4.Заполненная анкета на усыновление животного из приюта.\n" +
                "\n" +
                "5. Справка от ветеринара об отсутствии заболеваний, которые могут передаваться на других животных.\n" +
                "\n" +
                "6. Подписанный договор на усыновление собаки из приюта, который подписывается между приютом и новым владельцем собаки";
    }

    /**
     * Бот может выдать список рекомендаций по транспортировке животного.
     * @return список рекомендаций по транспортировке животного
     */
    public String recommendationsForTransportation() {
        return "Для комфортной транспортировки животного необходимо:\n" +
                "\n" +
                "1.Подходящий контейнер: животное должно находиться в контейнере, который соответствует его размеру,весу и виду. Контейнер должен быть достаточно прочным,и достаточно вентилируемым,чтобы обеспечить животному достаточный доступ к свежему воздуху.\n" +
                "\n" +
                "2. Безопасность: контейнер должен быть безопасным для животного.Для этого необходимо убедиться, что в контейнере нет острых предметов или других опасных предметов,которые могут нанести вред животному.\n" +
                "\n" +
                "3. Комфорт: животное должно находиться в комфортных условиях.Необходимо обеспечить достаточный доступ к воде и пище,а также мягкую подстилку или коврик для обеспечения комфорта животному во время транспортировки.\n";
    }

    /**
     * Бот выдает список рекомендаций по обустройству дома для щенка.
     * @return список рекомендаций по обустройству дома для щенка
     */
    public String homeImprovementForPuppy() {
        return "Для обустройства дома щенка необходимо:\n" +
                "1. Место для отдыха: Щенок должен иметь свое место для отдыха, где он может спокойно спать и отдыхать. Это может быть специальная корзина, кровать или подушка.\n" +
                "\n" +
                "2. Место для еды и воды: Щенок должен иметь место, где он будет кушать и пить воду. Это может быть специальный кормушка или миска.\n" +
                "\n" +
                "3. Игрушки: Щенку нужно много играть, чтобы он мог развиваться и расти здоровым. Нужно предоставить щенку игрушки, которые помогут ему заниматься физическими упражнениями и развивать интеллект.\n" +
                "\n" +
                "4. Туалет: Щенок должен знать, где ему нужно справлять свои нужды. Это может быть специальный пеленальный мат или лоток для собак.\n" +
                "\n" +
                "5. Прогулки: Щенок должен выходить на прогулки, чтобы он мог изучать окружающую среду, учиться социализироваться и получать достаточно физической активности.\n" +
                "\n" +
                "6. Уход за шерстью и здоровьем: Щенку необходимо регулярно чистить зубы, обрезать когти, ухаживать за шерстью и проверять его здоровье. Для этого нужно иметь специальные инструменты и средства гигиены.\n" +
                "\n" +
                "7. Обучение: Щенок должен учиться правильно вести себя дома и на улице. Для этого необходимо обучать его командам, правилам поведения и социализировать его.\n" +
                "\n" +
                "8. Убедитесь, что вы имеете все необходимые вещи для обустройства дома для вашего щенка, чтобы он мог чувствовать себя комфортно и здоровым."
                ;
    }

    /**
     * Бот может выдать список рекомендаций по обустройству дома для взрослой собаки.
     * @return список рекомендаций по обустройству дома для взрослой собаки
     */
    public String homeImprovementForAdultDog() {
        return "Для обустройства дома взрослой собаки необходимо:\n" +
                "* Место для отдыха: Взрослая собака должна иметь свое место для отдыха, где она может спокойно спать и отдыхать. Это может быть специальная корзина, кровать или подушка.Место для еды и воды: Взрослая собака должна иметь место, где она будет кушать и пить воду. Это может быть специальный кормушка или миска.\n" +
                "\n" +
                "* Игрушки: Взрослая собака также нуждается в игрушках, которые помогут ей заниматься физическими упражнениями и развивать интеллект.\n" +
                "\n" +
                "* Туалет: Взрослая собака должна знать, где ей нужно справлять свои нужды. Это может быть специальный лоток или выгульный дворик.\n" +
                "\n" +
                "* Прогулки: Взрослая собака должна выходить на прогулки, чтобы она могла получать достаточно физической активности, социализироваться и изучать окружающую среду.\n" +
                "\n" +
                "* Уход за шерстью и здоровьем: Взрослая собака также нуждается в регулярном уходе за шерстью и здоровьем, включая чистку зубов, обрезку когтей и проверку здоровья. Для этого нужно иметь специальные инструменты и средства гигиены.\n" +
                "\n" +
                "* Обучение: Взрослая собака может нуждаться в обучении или переобучении, особенно если она только что присоединилась к вашей семье. Обучение может включать в себя команды, правила поведения и социализацию.\n";
    }

    /**
     * Бот выдаёт список рекомендаций по обустройству дома для собаки с ограниченными возможностями.
     * @return список рекомендаций по обустройству дома для собаки с ограниченными возможностями
     */
    public String homeImprovementForDogWithDisabilities() {
        return "Для обустройства дома собаки с ограниченными возможностями необходимо:\n" +
                "* Обеспечить безопасность. Убедитесь, что дом не содержит ничего, что может представлять опасность для собаки, особенно если она имеет проблемы с движением. Убедитесь, что нет лестниц, выступающих предметов, острых углов и т.д.\n" +
                             "\n" +
                "* Создать комфортное место для отдыха. Убедитесь, что у собаки есть место, где она может отдохнуть и поспать. Это может быть мягкое место на полу, подушка или кровать для собаки.\n"+
                            "\n"+
                "* Изучить диету собаки. Если у собаки есть проблемы со здоровьем, возможно, ей понадобится специальная диета. Обсудите это со своим ветеринаром.\\n\" +\n" +
                            "\n" +
                "* Разработать программу занятий. Если у собаки есть ограничения в движении, возможно, ей потребуется специальная программа занятий, которая поможет ей оставаться активной и здоровой. Обсудите это со своим ветеринаром или тренером по собакам.\\n\" +\n" +
                            "\n" +
                "* Обеспечить доступ к питьевой воде и корму. Убедитесь, что у собаки всегда есть доступ к свежей питьевой воде и корму.\\n\" +\n" +
                               "\n" +
                "* Обеспечить необходимую медицинскую помощь. Если у собаки есть физические проблемы, ей может потребоваться дополнительная медицинская помощь, например, регулярные посещения ветеринара, лекарства и т.д. Следуйте рекомендациям ветеринара.\\n\" +\n" +
                               "\n" +
                "* Обеспечить удобную среду обитания. Обеспечьте достаточное количество места для движения собаки внутри дома, убедитесь, что ее поводок и ошейник соответствуют ее размеру и физическим возможностям.\\n\" +\n" +
                               "\n" +
                "* Регулярно проводить гигиенические процедуры. Убедитесь, что вы регулярно чистите место, где живет собака, и занимаетесь ее гигиеной (например, регулярно стригите ее когти и чистите зубы).\";\n" ;
    }

    /**
     * Бот выдаёт советы кинолога по первичному общению с собакой.
     * @return советы кинолога по первичному общению с собакой
     */
    public String TipsFromDogHandler() {
        return "Наши кинологи рекоммендуют:\n" +
                "1. Подойдите к собаке медленно и осторожно, не бегите и не приближайтесь слишком близко.\n" +
                "                \n" +
                "2. Дайте собаке возможность познакомиться с вами, представьтесь ей голосом и позвольте ей нюхать вас.\n" +
                "                \n" +
                "3. Не приставайте к собаке, если она не хочет вас видеть. Если она отходит от вас или ворчит, уйдите в сторону и не настаивайте на общении.\n" +
                "                \n" +
                "4. Никогда не подходите к собаке сзади и не трогайте ее, пока она не познакомится с вами и не даст вам свое разрешение.\n" +
                "                \n" +
                "5. Никогда не поднимайте и не обнимайте собаку без ее разрешения.\n" +
                "                \n" +
                "6. Избегайте прямого взгляда и не глазируйте на собаку, это может быть воспринято ею как угроза.\n" +
                "                \n" +
                "7. Говорите с собакой мягко и дружелюбно, используйте ее имя и обращайтесь к ней уважительно.\n" +
                "                \n" +
                "8. Если вы хотите погладить собаку, позвольте ей подойти к вам самой и выразить свое желание получить ласку.\n" +
                "                \n" +
                "9. Никогда не кричите на собаку и не пугайте ее, это может привести к негативным последствиям.\n" +
                "                \n" +
                "10. Если у собаки есть владелец, обязательно спросите его разрешения, прежде чем общаться со собакой.;\n";
    }

    /**
     * Бот выдаёт рекомендации по проверенным кинологам для дальнейшего обращения к ним.
     * @return рекомендации по проверенным кинологам
     */
    public String InfoAboutDogHandler() {
        return "Рекомендуем кинологов:\n" +
                "1. Ирина Петрова. Опыт работы 5 лет.\n"+
                "Специализации:Грумер.Контакты +7-913-334-93-23\n" +
                "                \n" +
                "2. Владислава. Опыт работы 8 лет\n" +
                "Специализации: зоотехния, специализация – кинология,\n" +
                "Контакты +7-913-334-93-23\n" +
                "                \n" +
                "3. Илья Игоревич. Опыт работы 2 года\n" +
                "Специализации: кинолог, кликер-дрессировка," +
                "Контакты +7-913-334-93-23";
    }

    /**
     * Бот выдаёт список причин, почему могут отказать и не дать забрать собаку из приюта.
     * @return список причин, почему могут отказать и не дать забрать собаку из приюта
     */
    public String ReasonsForRefusal() {
        return "Причины отказа:\n" +
                "* Несоответствие требованиям: Например,  могут потребовать от вас доказательства того,что вы живете в доме с огороженным двором, чтобы собака не убежала. Или же, может быть, не разрешают выдачу животных людям, которые ранее были лишены права на содержание животных.\n" +
                                "\n" +
                "* Несоответствие характера собаки: Некоторые собаки могут иметь поведенческие проблемы,такие как агрессивность или страх, и приют может не считать вас подходящим владельцем для такой собаки.\n" +
                "\n" +
                "* Приют может также не выдавать животных людям, которые не имеют опыта владения животными или не могут предоставить достаточное количество времени и внимания для ухода за собакой.\n" +
                               "\n" +
                "* Ограниченный запас: Если приют не имеет достаточного количества собак или если они имеют очень высокий спрос, они могут отказать вам в выдаче собаки.";
    }

    public String formDayReport() {
        return "Форма ежедневного отчёта:" +
                "\n1. Фото животного" +
                "\n2. Рацион животного" +
                "\n3. Общее самочувствие и привыкание к новому месту " +
                "\n4. Изменение в поведении";
    }

    public String writeContactData() {
        return "Необходимо ввести три поля: имя, фамилию и номер телефона. В формате:\n" +
                "Иван\n" +
                "Петров\n" +
                "79290463013\n" +
                "Или Напишите данные в одну строчку через один пробел" ;
    }

    //ВЕДЕНИЕ ПИТОМЦА
    /**
     * Метод, который принимает отчет от хозяина питомца
     * @param text описание состояния животного: рацион животного, общее самочувствие и привыкание к новому месту, изменение в поведении*
     * @param photo фото животного
     * @return текст о принятии/непринятии отчета
     */
//    public String getReport(String text, MultipartFile photo) {
//        if (text != null && photo != null) {
//            //загрузить фото и текст в базу animals, а также установить сегодняшнюю дату отчетности
//            return "Отчет принят";
//        }
//        if (text == null) {
//            return "Загрузите текст!";
//        }
//        if (photo == null) {
//            return "Загрузите фото!";
//        }
//        return "";
//    }

    /**
     * Метод, который проверяет дату последнего отчета.
     * Если отчета не было более 2х дней, высылает напоминание
     * @param idAnimal ID животного
     * @param lastReportDate дата последней отчетности
     */
//    public void reminderAboutReport(long idAnimal, LocalDate lastReportDate) {
//        //сравниваем дату отчета и сегодняшнюю, если больше 2, то отправляем напоминание
//    }
//
//    /**
//     * Метод, который проверяет закончился ли испытательный период.
//     * Если испытательный период окончен - направляет поздравления.
//     * @param idAnimal ID животного
//     * @param lastDateProbationReriod дата окончания испытательного срока
//     */
//    public void probationPeriodPassed(long idAnimal, LocalDate lastDateProbationReriod) {
//        //сравниваем дату окончания испыт.срока и сегодняшнюю, если больше, то поздравляем
//    }
//
//    /**
//     * Метод, который позволяет увеличить испытательный срок.
//     * Уведомляет об увеличении испытательного срока хозяина животного.
//     * @param idAnimal ID животного
//     * @param numberOfDays количество дней, на которое будет увеличен испытательный срок
//     * @return новую дату окончания испытательного срока
//     */
//    public LocalDate probationPeriodExtended(long idAnimal, int numberOfDays) {
//        //прибавляем к испыт.сроку кол-во дней и уведомляем об этом по номеру владельца
//        LocalDate newLastDateProbationReriod = null; //ЗАМЕНИТЬ: вместо null по ID животного находим дату окончания испыт.срока
//        return newLastDateProbationReriod;
//    }
//
//    /**
//     * Метод, который уведомляем, что испытательныйсрок не пройден и необходимо обратиться лично к администрации за дальнейшей инструкцией
//     * @param idAnimal ID животного
//     */
//    public void probationPeriodNotPassed(long idAnimal) {
//        //уведомляем, что испыт.срок не пройден и необходимо обратиться лично к администрации за дальнейшей инструкцией
//    }
//
//    /**
//     * Метод, который будет отправлять сообщения
//     * @param chatId ID пользователя
//     * @param s текст отправки
//     */
//    public void sendMessage(Long chatId, String s) {
//    }

}



